find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
find.package("devtools")
library(devtools)
find_rtools()
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallLocal()
install.packages("RMySQL", type = "source")
utils:::menuInstallLocal()
utils:::menuInstallPkgs()
install.packages("RMySQL", type = "source")
utils:::menuInstallLocal()
utils:::menuInstallLocal()
install.packages("RMySQL", type = "source")
utils:::menuInstallPkgs()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
install.packages("RMySQL")
devtools::install_github("RcppCore/Rcpp")
devtools::install_github("rstats-db/DBI")
devtools::install_github("rstats-db/RMySQL")
ucscDb <- dbConnect(MySQL(),user="genome", hot="genome-mysql.cse.ucsc.edu")
load(RMySQL)
mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A
q()
swirl()
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
?n
?n_district
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,count)
top_counts_sorted<-arrange(top_counts,desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
?chain
submit()
View(result3)
submit()
submit()
submit
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res=gather(students2,sex_class,count)
res=gather(students2,sex_class,count,-grade)
res<-=gather(students2,sex_class,count,-grade)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
students3
?gather
submit()
?spread
submit()
submit()
submit()
submit()
extract_numeric("class5")
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
?passed
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
bind_rows(passed,failed)
sat
?select
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label = TRUE)
0
quit()
library(swirl)
rm(list=ls())
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
swirl()
now()
this_moment<-now()
this_moment
week(this_moment)
hour(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
install_from_swirl("Exploratory Data Analysis")
dt2
ymd(dt2)
update(this_moment, hours=8,minutes=34,seconds=55)
this_moment
this_moment<-update(this_moment,hours=3,minutes=39)
this_moment
nyc<-now("America/New_York")
nyc
install_from_swirl("Exploratory Data Analysis")
depart<-nyc+days(2)
depart
depart<-update(depart,hous=17,minutes=34)
depart<-update(depart,hours=17,minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
with_tz(arrive,"Asia/Hong_Kong")
arrive<-with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time<-mdy("June 17,2008",tz="Singapore")
last_time<-mdy("June 17, 2008",tz="Singapore")
play()
last_time<-mdy("June 17,2008",tz="Singapore")
last_time
nxt()
last_time
?new_interval
play()
this_moment
this_moment - last_time
a<-this_moment - last_time
a
minutes(a)
class(a)
as.Date(a)
as.integer(a)
as.numeric(a)
nxt()
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
swirl()
install.packages("lattice")
library(ggplot2)
library(grDevices)
ls()
x=1:300
e<-rnorm(300,5,10)
y<-0.5*x+e
plot(x,y)
e<-rnorm(300,100,10)
y<-0.5*x+e
plot(x,y)
plot(e)
?abline
abline(h=100)
plot(e-100)
plot(e)
plot(e-100)
plot(100-e)
clear()
hist(e)
hist(e,nbin=30)
?hist
hist(e,breaks=30)
hist(e,breaks=70:20:200)
hist(e,breaks=70:50:200)
hist(e,breaks=70:200)
hist(e,breaks=20)
hist(e,breaks=10)
color()
colors()
hist(e,breaks=10,col = "salmon")
par(bg="tomato")
par(bg="tomato1")
par(col="tomato1")
par(mar=12px)
par(mar=12)
par("bg")
title(x="jkeflkemf")
title(x="----------------------------")
library(swirl)
rm(list=ls())
swirl()
setwd("C:/Users/ssole_000/DSF2015/exdata-033/projet2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
library(reshape2)
library(ggplot2)
SCC_coal<-grepl("Coal",SCC$EI.Sector)
unique_coal_SCC<-unique(SCC[SCC_coal,1])
NEI_coal<-NEI[NEI$SCC %in% unique_coal_SCC,]
coal<-merge(NEI_coal,SCC_coal)
coal<-merge(NEI_coal,SCC[SCC_coal,1:4])
coal_limited<-cbind(coal[,c(4,6)],as.character(coal[,9])) ##Lose all other levels than the 3 relevant to coal
coal_sum<-tapply(coal_limited$Emissions,list(coal_limited$year,coal_limited[,3]),sum)
coal_per_sector<-melt(coal_sum,measure.vars=labels(coal_sum)[2])
names(coal_per_sector)<-c("year","EI.Sector","Emission")
png(file="plot4.png")
ggplot(data=coal_per_sector, aes(x=year,y=Emission,fill=EI.Sector))+geom_bar(stat = "identity")
dev.off()
?ggplot
with(coal_per_sector,qplot(year,Emission,color=EI.Sector))
with(coal_per_sector,qplot(year,Emission,color=EI.Sector)+geom_line()+geom_point())
with(coal_per_sector,
qplot(year,Emission,color=EI.Sector)
+geom_line()
+geom_point()
)
png(file="plot4.png")
SCC_coal<-grepl("Coal",SCC$EI.Sector)
unique_coal_SCC<-unique(SCC[SCC_coal,1])
NEI_coal<-NEI[NEI$SCC %in% unique_coal_SCC,]
coal<-merge(NEI_coal,SCC[SCC_coal,1:4])
coal_limited<-cbind(coal[,c(4,6)],as.character(coal[,9])) ##Lose all other levels than the 3 relevant to coal
coal_sum<-tapply(coal_limited$Emissions,list(coal_limited$year,coal_limited[,3]),sum)
coal_per_sector<-melt(coal_sum,measure.vars=labels(coal_sum)[2])
names(coal_per_sector)<-c("year","EI.Sector","Emission")
with(coal_per_sector,
qplot(year,Emission,color=EI.Sector)
+geom_line()
+geom_point()
)
dev.off()
setwd("~/GitHub/getdata-033")
rm(list=ls())
dir<-getwd()
x_test<-read.table(paste(dir,"/UCI HAR Dataset/test/X_test.txt",sep=""))
y_test<-read.table(paste(dir,"/UCI HAR Dataset/test/Y_test.txt",sep=""))
subject_test<-read.table(paste(dir,"/UCI HAR Dataset/test/subject_test.txt",sep=""))
x_train<-read.table(paste(dir,"/UCI HAR Dataset/train/X_train.txt",sep=""))
y_train<-read.table(paste(dir,"/UCI HAR Dataset/train/Y_train.txt",sep=""))
subject_train<-read.table(paste(dir,"/UCI HAR Dataset/train/subject_train.txt",sep=""))
features<-read.table(paste(dir,"/UCI HAR Dataset/features.txt",sep=""))
activity_labels<-read.table(paste(dir,"/UCI HAR Dataset/activity_labels.txt",sep=""))
head(features)
head(names(x_train))
usable_index<-grepl("mean()",features[,2],fixed=TRUE)
usable_index2<-grepl("std()",features[,2],fixed=TRUE)
use_index<-as.logical(usable_index+usable_index2)
head(y_train)
x<-rbind(x_test[,use_index],x_train[,use_index])
y<-rbind(y_test,y_train)
rm(list("x_train","x_test"))
rm(list(x_train,x_test))
unique(subject_test)
unique(subject_train)
y_label<-mapvalues(t(y),from=t(activity_labels[1]),to=t(activity_labels[2]))
library(plyr)
library(dplyr)
library(tidyr)
y_label<-mapvalues(t(y),from=t(activity_labels[1]),to=t(activity_labels[2]))
y_label<-mapvalues(t(y),from=activity_labels[1],to=activity_labels[2])
y_label<-mapvalues(y,from=activity_labels[1],to=activity_labels[2])
class(y)
dim(y)
yy<-as.numeric(y)
yy<-as.matrix(y)
dim(yy)
head(y)
head(yy)
y_label<-mapvalues(yy,from=activity_labels[1],to=activity_labels[2])
head(y_label)
activity_labels
yy<-mapvalues(y,from=activity_labels[,1],to=activity_labels[,2])
yy<-mapvalues(t(t(y)),from=activity_labels[,1],to=activity_labels[,2])
head(yy)
yy<-mapvalues(t(y),from=t(activity_labels[,1]),to=t(activity_labels[,2]))
head(yy)
head(yy,1)
as.matrix(c(1,2,3))
y_label<-mapvalues(as.matrix(y),from=activity_labels[,1],to=activity_labels[,2])
dim(y_label)
str(y_label)
y_label<-gsub(activity_labels[,1],activity_labels[,2],y)
y_label<-sapply(activity_labels[,1],function(x) gsub(x,activity_labels[x,2],y))
y_label<-sapply(activity_labels,function(x,label) y[y==x]<-label)
y_label<-sapply(activity_labels,function(x,label=activity_labels[x,2]) y[y==x]<-label)
y_label<-sapply(activity_labels,function(x,label=activity_labels[x,2]) y[y[,1]==x]<-label)
class(activity_labels[,2])
as.character(activity_labels[,2])
activity_label[,2]<-as.character(activity_labels[,2])
activity_labels[,2]<-as.character(activity_labels[,2])
y_label<-sapply(activity_labels,function(x,label=activity_labels[x,2]) y[y[,1]==x]<-label)
y_label<-sapply(activity_labels,function(x,label=activity_labels[x,2]) y[y==x]<-label)
y_label<-sapply(activity_labels[,1],function(x,label=activity_labels[x,2]) y[y==x]<-label)
dim(y_label)
length(y_label)
head(y)
y_label<-mapvalues(simplify2array(y),from=activity_labels[,1],to=activity_labels[,2])
names(y_label)<-"Activity"
data<-x
names(data)<-feat
data<-cbind(y_label,data)
feat<-features[use_index,2]
names(y_label)<-"Activity"
data<-x
names(data)<-feat
data<-cbind(y_label,data)
str(data)
values<-rbind(x_test[,use_index],x_train[,use_index])
activity<-rbind(y_test,y_train)
feat<-features[use_index,2]
full_act_label<-mapvalues(simplify2array(activity),from=activity_labels[,1],to=activity_labels[,2])
tidy_data<-cbind(full_act_label,values)
names(tidy_data)<-c("Activity",feat)
names(tidy_data)
head(features)
class(features[,2])
feat<-as.character(features[use_index,2])
head(feat)
names(tidy_data)<-c("Activity",feat)
names(tidy_data)
dat3 <- lapply(strsplit(names(tidy_data[-c(1,2)]), "-"), function(x) gsub("()", "", x))
dim(dat3)
length(dat3)
head(dat3)
a<-spread(tidy_data,strsplit(names(tidy_data),"-"),c(motion,statElement,direction))
a<-melt(tidy_data)
head(a)
aa<-spread(a,variable,c(motion,statElement,direction))
aa<-spread(a,variable,c("motion","statElement","direction"))
aa<-spread(a,a$variable,c("motion","statElement","direction"))
aa<-separate(a,variable,c("motion","statElement","direction"))
head(aa)
subject<-rbind(subject_test,subject_train)
feat<-as.character(features[use_index,2])
full_act_label<-mapvalues(simplify2array(activity),from=activity_labels[,1],to=activity_labels[,2])
tidy_data<-cbind(subject.full_act_label,values)
names(tidy_data)<-c("subject","activity",feat)
##melt data into long dataframe, then separate the feature components to get cols:
##subject / activity / motion / statElement / direction / value
long_data<-separate(melt(tidy_data),variable,c("motion","statElement","direction"))
tidy_data<-cbind(subject,full_act_label,values)
names(tidy_data)<-c("subject","activity",feat)
##melt data into long dataframe, then separate the feature components to get cols:
##subject / activity / motion / statElement / direction / value
long_data<-separate(melt(tidy_data),variable,c("motion","statElement","direction"))
head(long_data)
a<-melt(tidy_data[,-c(1,2)])
head(a)
a<-melt(tidy_data,names(tidy_data[1:2]),names(tidy_data[-c(1,2)]))
melt_data<-melt(tidy_data,names(tidy_data[1:2]),names(tidy_data[-c(1,2)]))
long_data<-separate(melt(tidy_data),variable,c("motion","statElement","direction"))
melt_data<-melt(tidy_data,names(tidy_data[1:2]),names(tidy_data[-c(1,2)]))
long_data<-separate(melt_data,variable,c("motion","statElement","direction"))
averages<-tapply(long_data,list(subject,activity,motion,statElement,direction))
names(long_data)
averages<-tapply(long_data,list(subject,activity,long_data$motion,long_data$statElement,long_data$direction))
averages<-tapply(long_data,list(subject,activity,long_data$motion,long_data$statElement,long_data$direction),mean)
averages<-tapply(long_data,list(long_data$subject,long_data$activity,long_data$motion,long_data$statElement,long_data$direction),mean)
averages<-tapply(tidy_data,list(tidy_data$subject,tidy_data$activity))
averages<-tapply(tidy_data,list(tidy_data$subject,tidy_data$activity),mean)
averages<-tapply(tidy_data,list(tidy_data[,1],tidy_data[,2]),mean)
averages<-tapply(tidy_data[,-c(1,2)],list(tidy_data[,1],tidy_data[,2]),mean)
averages<-tapply(long_data$value,list(long_data$subject,long_data$activity,long_data$motion,long_data$statElement,long_data$direction),mean)
dim(averages)
melt(averages)
names(melt_data)
averages<-with(melt_data,tapply(value,list(subject,activity,variable),mean))
av<-melt(averages)
head(av)
av<-sort(av,av$Var1)
?sort
av<-sort(av)
av<-sort(av$Var1)
head(av)
